apiVersion: v1
kind: ServiceAccount
metadata:
  name: autoscaler-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: autoscaler-nginx
  namespace: default
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: autoscaler-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: autoscaler-nginx
subjects:
- kind: ServiceAccount
  name: autoscaler-nginx
  namespace: default
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: autoscaler-nginx-scaledown
  namespace: default
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - args:
            - kubectl scale deployment nginx --replicas=0
            command:
            - /bin/sh
            - -c
            image: ankitcharolia/kubectl:1.29.3
            imagePullPolicy: IfNotPresent
            name: autoscaler-main
            resources: {}
            securityContext:
              runAsGroup: 0
              runAsUser: 0
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: autoscaler-nginx
          serviceAccountName: autoscaler-nginx
          terminationGracePeriodSeconds: 30
  schedule: '*/2 * * * *'
  successfulJobsHistoryLimit: 1
  suspend: false
  timeZone: Europe/Berlin